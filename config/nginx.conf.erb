upstream webcore {
  server unix:<%= shared_path %>/tmp/sockets/webcore.sock;
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

<%# TODO: Need to generalize this config, or allow the user to configure the Capistrano servers %>
<% if fetch(:stage).to_sym == :production %>
server {
  listen 443 default ssl;
  server_name "";

  ssl_certificate     /etc/letsencrypt/live/imjac.in/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/imjac.in/privkey.pem;

  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache shared:SSL:10m;
  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  access_log <%= shared_path %>/tmp/log/nginx.access.log;
  error_log <%= shared_path %>/tmp/log/nginx.error.log info;

  underscores_in_headers on;

  location / {
    proxy_pass http://webcore;
    proxy_set_header Host            $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_pass_request_headers on;
  }
  
  client_max_body_size 10M;
  keepalive_timeout 10;
}
<% else %>
server {
  listen 443;
  server_name "";

  rewrite ^(.*) http://$host$1 permanent
}
<% end %>

server {
  listen 80;
  server_name "";

  access_log <%= shared_path %>/tmp/log/nginx.access.log;
  error_log <%= shared_path %>/tmp/log/nginx.error.log info;

  underscores_in_headers on;

  location /.well-known/acme-challenge {
    root /var/www/letsencrypt;
  }

  location / {
    proxy_pass http://webcore;
    proxy_set_header Host            $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;
  }
  
  client_max_body_size 10M;
  keepalive_timeout 10;
}